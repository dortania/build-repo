name: Build
on:
  push:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:
env:
  FORCE_INSTALL: 1
  HAS_OPENSSL_BUILD: 1
  HAS_OPENSSL_W32BUILD: 0
  ACID32: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  PROD: ${{ github.ref == 'refs/heads/github-actions' }}
concurrency:
  group: ${{ github.workflow }}
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: github-actions
      - name: Set up Python 3
        run: brew install python3 python-tk
      - name: Install Python Dependencies
        run: |
          python3 -m pip install -U pip wheel
          python3 -m pip install hammock python-dateutil datetime termcolor2 purl python-magic humanize gitpython cryptography macholib
          echo "OVERRIDE_PYTHON3=$(which python3)" >> "$GITHUB_ENV"
      # - name: Check Parallel
      #   run: python3 -u parallel_check.py ${{ secrets.GITHUB_TOKEN }}
      - name: Install Build Dependencies
        run: | # Needing for VoodooI2C to build without actually having cldoc & cpplint
          brew tap FiloSottile/homebrew-musl-cross
          brew install libmagic mingw-w64 openssl musl-cross
          printf "#!/bin/bash\nexit 0" > /usr/local/bin/cldoc
          printf "#!/bin/bash\nexit 0" > /usr/local/bin/cpplint
          chmod +x /usr/local/bin/cldoc /usr/local/bin/cpplint
      - uses: fregante/setup-git-user@2e28d51939d2a84005a917d2f844090637f435f8
      - name: Set Up Working Tree
        uses: actions/checkout@v2
        with:
          ref: builds
          path: Config
      - name: Check Ratelimit
        run: python3 -u check_ratelimit.py ${{ secrets.GITHUB_TOKEN }}
      - name: Run Builder
        run: python3 -u updater.py ${{ secrets.GITHUB_TOKEN }} ${{ secrets.WEBHOOK_URL }} ${{ secrets.PAYLOAD_KEY }}
        env:
          JOB_NAME: ${{ github.job }}
      - name: Check Ratelimit
        run: python3 -u check_ratelimit.py ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        if: ${{ ! env.PROD }}
        with:
          name: Build
          path: Config